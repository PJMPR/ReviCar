package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import domain.model.Offer;

public class OffersRepository {
	
private Connection connection;
	
	private String createTableSql = "CREATE TABLE offers("
			+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
			+ "vehtype VARCHAR(20),"
			+ "make VARCHAR(20),"
			+ "model VARCHAR(20),"
			+ "year INT," 
			+ "price DOUBLE(20),"
			+ ")";
	private Statement createTable;
	

	private String selectByIdSql = "SELECT * FROM offer WHERE id=?";
	private String selectAllSql = "SELECT * FROM offer";
	
	private PreparedStatement selectById;
	private PreparedStatement selectAll;
	
	public OffersRepository(Connection connection) {
		this.connection = connection;
		
		try {
			createTable = connection.createStatement();
			
			boolean tableExists = false;
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			while(rs.next()){
				if(rs.getString("TABLE_NAME").equalsIgnoreCase("offers")){
					tableExists=true;
					break;
				}
			}
			if(!tableExists)
				createTable.executeUpdate(createTableSql);
			selectById = connection.prepareStatement(selectByIdSql);
			selectAll = connection.prepareStatement(selectAllSql);
				
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public Offer get(int offerId){
		try{
			
			selectById.setInt(1, offerId);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				Offer result = new Offer();
				result.setId(rs.getInt("id"));
				result.setVehtype(rs.getString("vehtype"));
				result.setMake(rs.getString("make"));
				result.setModel(rs.getString("model"));
				result.setYear(rs.getInt("year"));
				result.setPrice(rs.getDouble("amount"));
				return result;
			}
		}
		catch(SQLException ex){
			ex.printStackTrace();
		}
		return null;
	}

	public List<Offer> getAll(){
		try{
			List<Offer> result = new ArrayList<Offer>();
			ResultSet rs = selectAll.executeQuery();
			while(rs.next()){
				Offer a = new Offer();
				a.setId(rs.getInt("id"));
				a.setVehtype(rs.getString("vehtype"));
				a.setMake(rs.getString("make"));
				a.setModel(rs.getString("model"));
				a.setYear(rs.getInt("year"));
				a.setPrice(rs.getDouble("amount"));
				result.add(a);
			}
			return result;
		}
		catch(SQLException ex){
			ex.printStackTrace();
		}
		return null;
	}

}
